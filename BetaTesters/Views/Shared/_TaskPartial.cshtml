@model TaskServiceModel
@inject IApplicationUserService applicationUserService

<div class="col-md-4">
    <div class="card mb-3">
        <div class="card-body text-center">
            <h4>@Model.Name</h4>
            <h5>Description: <b>@Model.Description</b></h5>
            <h6>
                Reward:
                <b>@String.Format("{0:f2}", Model.Reward) BGN</b>
            </h6>
            <p>Assigned on: <b>@Model.AssignDate</b></p>
            <p>Finished on: <b>@(Model.FinishDate ?? "Not Finished")</b></p>
            @if(Model.State == TaskState.Available)
            {
                <p>State: <span class="alert-info fw-bold">@Model.State</span></p>
                if (User.IsInRole(RoleConstants.DefaultUserRole))
                {
                    <a asp-controller="Task" asp-action="Take" asp-route-taskId="@Model.Id.ToString()"
                    class="btn btn-info">Take</a>
                }
                else if(User.IsInRole(RoleConstants.ModeratorRole))
                {
                    if (User.Id().ToString() == Model.CreatorId.ToLower())
                    {
                        <a asp-controller="Task" asp-action="Edit" asp-route-taskId="@Model.Id.ToString()"
                        class="btn btn-warning">Edit</a>
                    }
                }
                else
                {
                    <a asp-controller="Task" asp-action="Edit" asp-route-taskId="@Model.Id.ToString()"
                       class="btn btn-warning">Edit</a>
                }
            }
            else if(Model.State == TaskState.InProgress)
            {
                var contractor = await applicationUserService.GetApplicationUserByIdAsync(Model.ContractorId!);
                <p>State: <span class="alert-warning fw-bold">@Model.State</span></p>
                <p>Contractor: @($"{contractor.FirstName} {contractor.LastName}") </p>
                if (User.IsInRole(RoleConstants.DefaultUserRole))
                {
                    <a asp-controller="Task" asp-action="Complete" asp-route-taskId="@Model.Id.ToString()"
                       class="btn btn-info">Complete</a>
                    <a asp-controller="Task" asp-action="Forfeit" asp-route-taskId="@Model.Id.ToString()"
                       class="btn btn-danger">Forfeit</a>
                }
            }
            else if(Model.State == TaskState.Completed)
            {
                var contractor = await applicationUserService.GetApplicationUserByIdAsync(Model.ContractorId!);
                <p>State: <span class="alert-success fw-bold">@Model.State</span></p>
                <p>Contractor: @($"{contractor.FirstName} {contractor.LastName}") </p>
            }
            <br />
        </div>
    </div>
</div>
